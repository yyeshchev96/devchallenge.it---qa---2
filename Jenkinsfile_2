#!/usr/bin/env groovy

pipeline {
	agent any

	stages {
		stage('Preparation') {
			steps {
				sh "echo 'Starting the build'"
			}
		}

		stage('API Tests') {
			steps {
				sh '/usr/local/bin/node /usr/local/bin/newman run "devchallenge-r2-tests.json"\
				-e "devchallenge-r2-env.json" \
				--export-environment "devchallenge-r2-env.json" \
				-r cli,htmlextra \
				--reporter-htmlextra-export "reports/APITestSummary.html" \
				--reporter-htmlextra-darkTheme'
			}
		}
		stage('Publish HTML Report') {
			steps {
				publishHTML([
					allowMissing: true, 
					alwaysLinkToLastBuild: true, 
					keepAll: false, 
					reportDir: 'reports', 
					reportFiles: 'APITestSummary.html', 
					reportName: 'HTML Report', 
					reportTitles: ''
				])
				githubPRStatusPublisher buildMessage: message(failureMsg: githubPRMessage('Build has FAILED'), successMsg: githubPRMessage('BUILD PASSED')), errorHandler: statusOnPublisherError('UNSTABLE'), statusMsg: githubPRMessage('${GITHUB_PR_COND_REF} run ended'), unstableAs: 'FAILURE'
			}
		}
	}
}